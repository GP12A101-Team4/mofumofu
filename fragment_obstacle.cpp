//=============================================================================
//
// 障害物の動物碎片描画 [fragment_obstacle.cpp]
//
//=============================================================================
#include "main.h"
#include "fragment_obstacle.h"
#include "camera.h"
#include <time.h>

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MAX_POLYGON (6)
#define SIZE_WH     (100.0f)

//*****************************************************************************
// グローバル変数
//*****************************************************************************
static ID3D11Buffer* g_VertexBuffer = NULL;
static ID3D11ShaderResourceView* g_Texture[OBSTACLE_TYPES][TEXTURE_PER_TYPE] = { NULL };

static OBSTACLE_FRAGMENT g_Obstacle[OBSTACLE_MAX];

static char* g_TextureNames[OBSTACLE_TYPES][TEXTURE_PER_TYPE] = {
    // Dog
    { "data/TEXTURE/dog_01.png", "data/TEXTURE/dog_02.png", "data/TEXTURE/dog_03.png", "data/TEXTURE/dog_04.png", "data/TEXTURE/dog_05.png" },
    // Cat
    { "data/TEXTURE/cat_01.png", "data/TEXTURE/cat_02.png", "data/TEXTURE/cat_03.png", "data/TEXTURE/cat_04.png" },
    // Elephant
    { "data/TEXTURE/elephant_01.png", "data/TEXTURE/elephant_02.png", "data/TEXTURE/elephant_03.png", "data/TEXTURE/elephant_04.png", "data/TEXTURE/elephant_05.png", "data/TEXTURE/elephant_06.png" },
    // Mouse
    { "data/TEXTURE/mouse_01.png", "data/TEXTURE/mouse_02.png", "data/TEXTURE/mouse_03.png", "data/TEXTURE/mouse_04.png", "data/TEXTURE/mouse_05.png" },
    // Sheep
    { "data/TEXTURE/sheep_01.png", "data/TEXTURE/sheep_02.png", "data/TEXTURE/sheep_03.png", "data/TEXTURE/sheep_04.png" },
};

//*****************************************************************************
// 頂点定義
//*****************************************************************************
static VERTEX_3D g_VertexArray[4] = {
    { XMFLOAT3(-SIZE_WH,  SIZE_WH, 0.0f), XMFLOAT3(0,0,-1), XMFLOAT4(1,1,1,1), XMFLOAT2(0,0) },
    { XMFLOAT3(SIZE_WH,  SIZE_WH, 0.0f), XMFLOAT3(0,0,-1), XMFLOAT4(1,1,1,1), XMFLOAT2(1,0) },
    { XMFLOAT3(-SIZE_WH, -SIZE_WH, 0.0f), XMFLOAT3(0,0,-1), XMFLOAT4(1,1,1,1), XMFLOAT2(0,1) },
    { XMFLOAT3(SIZE_WH, -SIZE_WH, 0.0f), XMFLOAT3(0,0,-1), XMFLOAT4(1,1,1,1), XMFLOAT2(1,1) },
};

void SetObstacle(int i, int type, int texIndex, XMFLOAT3 pos, XMFLOAT3 scl, XMFLOAT3 rot)
{
    g_Obstacle[i].use = TRUE;
    g_Obstacle[i].type = type;
    g_Obstacle[i].texIndex = texIndex;
    g_Obstacle[i].pos = pos;
    g_Obstacle[i].scl = scl;
    g_Obstacle[i].rot = rot;
}

//*****************************************************************************
// 初期化処理
//*****************************************************************************
HRESULT InitObstacleFragment(void)
{
    // 頂点バッファ作成
    D3D11_BUFFER_DESC bd = {};
    bd.Usage = D3D11_USAGE_DYNAMIC;
    bd.ByteWidth = sizeof(VERTEX_3D) * 4;
    bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;
    bd.CPUAccessFlags = D3D11_CPU_ACCESS_WRITE;

    D3D11_SUBRESOURCE_DATA sd = {};
    sd.pSysMem = g_VertexArray;

    GetDevice()->CreateBuffer(&bd, &sd, &g_VertexBuffer);

    // テクスチャ読み込み
    for (int t = 0; t < OBSTACLE_TYPES; t++) {
        for (int i = 0; i < TEXTURE_PER_TYPE; i++) {
            if (g_TextureNames[t][i] == NULL) continue;
            D3DX11CreateShaderResourceViewFromFile(GetDevice(), g_TextureNames[t][i], NULL, NULL, &g_Texture[t][i], NULL);
        }
    }

    // ランダム配置
    //srand((unsigned int)time(NULL));
    //for (int i = 0; i < OBSTACLE_MAX; i++) {
    //    g_Obstacle[i].use = TRUE;
    //    g_Obstacle[i].type = rand() % OBSTACLE_TYPES;
    //    g_Obstacle[i].texIndex = rand() % TEXTURE_PER_TYPE;
    //    g_Obstacle[i].pos = XMFLOAT3(rand() % 1000 - 500, 0.0f, rand() % 1000 - 500);
    //    g_Obstacle[i].scl = XMFLOAT3(0.5f + (rand() % 100) / 100.0f, 0.5f + (rand() % 100) / 100.0f, 1.0f);
    //    g_Obstacle[i].rot = XMFLOAT3(0.0f, XMConvertToRadians(rand() % 360), 0.0f);
    //}

    //// 0番目の障害物を「猫」の0番テクスチャ（cat_01.png）として配置。位置は(-300, 0, 100)、スケールは(1,1,1)、回転なし。
    //SetObstacle(
    //    0,              // 障害物配列のインデックス（0番）
    //    1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
    //    0,              // 猫の0番目のテクスチャ（cat_01.png）
    //    { -300, 0, 100 }, // ワールド空間での配置座標（X, Y, Z）
    //    { 1, 1, 1 },       // スケール（X, Y, Z）＝原寸大
    //    { 0, 0, 0 }        // 回転（X, Y, Z）＝回転なし
    //);
    //// 1番目の障害物を「犬」の2番テクスチャ（dog_03.png）として配置。位置は(150, 0, -250)、スケールは(1.2, 1.2, 1.0)、Y軸に45度回転。
    //SetObstacle(
    //    1,                      // 障害物配列のインデックス（1番）
    //    0,                      // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
    //    2,                      // 犬の2番目のテクスチャ（dog_03.png）
    //    { 150, 0, -250 },       // ワールド空間での配置座標（X, Y, Z）
    //    { 1.2f, 1.2f, 1.0f },   // スケール（X, Y, Z）
    //    { 0, XMConvertToRadians(45), 0 }  // 回転（X, Y, Z）＝Y軸に45度回転
    //);
    // 0番目の障害物を「象」の3番テクスチャ（elephant_04.png）として配置。位置は(-200, -10, 100)、スケールは(1.2, 1.2, 1.0)、Y軸に30度回転。

    SetObstacle(
        0,              // 障害物配列のインデックス（0番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 象の3番目のテクスチャ（elephant_04.png）
        { -200, 20, 100 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.2f, 1.2f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(30), 0 }  // 回転（X, Y, Z）＝Y軸に30度回転
    );

    // 1番目の障害物を「猫」の1番テクスチャ（cat_02.png）として配置。位置は(600, 50, 300)、スケールは(1.1, 1.1, 1.1)、Y軸に90度回転。
    SetObstacle(
        1,              // 障害物配列のインデックス（1番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 猫の1番目のテクスチャ（cat_02.png）
        { 600, 50, 300 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.1f, 1.1f, 1.1f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(90), 0 }  // 回転（X, Y, Z）＝Y軸に90度回転
    );

    // 2番目の障害物を「犬」の2番テクスチャ（dog_03.png）として配置。位置は(-500, 70, -500)、スケールは(1.3, 1.3, 1.2)、Y軸に180度回転。
    SetObstacle(
        2,              // 障害物配列のインデックス（2番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 犬の2番目のテクスチャ（dog_03.png）
        { -500, 70, -500 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.3f, 1.3f, 1.2f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(180), 0 }  // 回転（X, Y, Z）＝Y軸に180度回転
    );

    // 3番目の障害物を「羊」の2番テクスチャ（sheep_03.png）として配置。位置は(800, -20, 50)、スケールは(1.4, 1.4, 1.3)、回転なし。
    SetObstacle(
        3,              // 障害物配列のインデックス（3番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 羊の2番目のテクスチャ（sheep_03.png）
        { 800, -20, 50 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.4f, 1.4f, 1.3f }, // スケール（X, Y, Z）
        { 0, 0, 0 }     // 回転（X, Y, Z）＝回転なし
    );

    // 4番目の障害物を「鼠」の1番テクスチャ（mouse_02.png）として配置。位置は(-1200, -4, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に45度回転。
    SetObstacle(
        4,              // 障害物配列のインデックス（4番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 鼠の1番目のテクスチャ（mouse_02.png）
        { -1200, -4, 600 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(45), 0 }  // 回転（X, Y, Z）＝Y軸に45度回転
    );

    // 5番目の障害物を「象」の5番テクスチャ（elephant_06.png）として配置。位置は(-100, 100, -200)、スケールは(1.6, 1.6, 1.4)、Y軸に135度回転。
    SetObstacle(
        5,              // 障害物配列のインデックス（5番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        5,              // 象の5番目のテクスチャ（elephant_06.png）
        { -100, 40, -200 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.6f, 1.6f, 1.4f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(135), 0 }  // 回転（X, Y, Z）＝Y軸に135度回転
    );

    // 6番目の障害物を「猫」の0番テクスチャ（cat_01.png）として配置。位置は(1400, 60, 400)、スケールは(1.0, 1.0, 1.0)、Y軸に270度回転。
    SetObstacle(
        6,              // 障害物配列のインデックス（6番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 猫の0番目のテクスチャ（cat_01.png）
        { 1400, 60, 400 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.0f, 1.0f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(270), 0 }  // 回転（X, Y, Z）＝Y軸に270度回転
    );

    // 8番目
    SetObstacle(
        8,              // 障害物配列のインデックス（8番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 羊の3番目のテクスチャ（sheep_04.png）
        { 900, 30, -100 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.8f, 0.8f, 0.8f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(150), 0 }  // 回転（X, Y, Z）＝Y軸に150度回転
    );

    // 9番目の障害物を「鼠」の4番テクスチャ（mouse_05.png）として配置。位置は(-800, 80, -300)、スケールは(1.5, 1.5, 1.3)、回転なし。
    SetObstacle(
        9,              // 障害物配列のインデックス（9番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        4,              // 鼠の4番目のテクスチャ（mouse_05.png）
        { -800, 80, -300 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.5f, 1.5f, 1.3f }, // スケール（X, Y, Z）
        { 0, 0, 0 }     // 回転（X, Y, Z）＝回転なし
    );

    // 10番目の障害物を「象」の2番テクスチャ（elephant_03.png）として配置。位置は(1100, -10, 500)、スケールは(1.7, 1.7, 1.5)、Y軸に210度回転。
    SetObstacle(
        10,             // 障害物配列のインデックス（10番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 象の2番目のテクスチャ（elephant_03.png）
        { 1100, 30, 500 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.7f, 1.7f, 1.5f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(210), 0 }  // 回転（X, Y, Z）＝Y軸に210度回転
    );

    // 11番目の障害物を「猫」の3番テクスチャ（cat_04.png）として配置。位置は(-50, 40, 150)、スケールは(1.3, 1.3, 1.2)、Y軸に300度回転。
    SetObstacle(
        11,             // 障害物配列のインデックス（11番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 猫の3番目のテクスチャ（cat_04.png）
        { -50, 40, 150 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.3f, 1.3f, 1.2f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(300), 0 }  // 回転（X, Y, Z）＝Y軸に300度回転
    );

    // 12番目の障害物を「犬」の1番テクスチャ（dog_02.png）として配置。位置は(650, -15, -700)、スケールは(1.4, 1.4, 1.3)、Y軸に75度回転。
    SetObstacle(
        12,             // 障害物配列のインデックス（12番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 犬の1番目のテクスチャ（dog_02.png）
        { 650, -15, -700 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.4f, 1.4f, 1.3f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(75), 0 }  // 回転（X, Y, Z）＝Y軸に75度回転
    );

    // 13番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(-600, 10, 400)、スケールは(1.1, 1.1, 1.0)、Y軸に120度回転。
    SetObstacle(
        13,             // 障害物配列のインデックス（13番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 羊の0番目のテクスチャ（sheep_01.png）
        { -600, 10, 400 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.1f, 1.1f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(120), 0 }  // 回転（X, Y, Z）＝Y軸に120度回転
    );

    // 14番目の障害物を「鼠」の0番テクスチャ（mouse_01.png）として配置。位置は(1300, 20, -150)、スケールは(1.6, 1.6, 1.4)、Y軸に240度回転。
    SetObstacle(
        14,             // 障害物配列のインデックス（14番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 鼠の0番目のテクスチャ（mouse_01.png）
        { 1300, 20, -150 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.6f, 1.6f, 1.4f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(240), 0 }  // 回転（X, Y, Z）＝Y軸に240度回転
    );

    // 15番目の障害物を「象」の6番テクスチャ（elephant_07.png）として配置。位置は(200, 90, 300)、スケールは(1.9, 1.9, 1.7)、回転なし。
    SetObstacle(
        15,             // 障害物配列のインデックス（15番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        6,              // 象の6番目のテクスチャ（elephant_07.png）
        { 200, 50, 300 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.9f, 1.9f, 1.7f }, // スケール（X, Y, Z）
        { 0, 0, 0 }     // 回転（X, Y, Z）＝回転なし
    );

    // 16番目の障害物を「猫」の2番テクスチャ（cat_03.png）として配置。位置は(-1100, 50, -600)、スケールは(0.9, 0.9, 0.9)、Y軸に90度回転。
    SetObstacle(
        16,             // 障害物配列のインデックス（16番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 猫の2番目のテクスチャ（cat_03.png）
        { -1100, 30, -600 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(90), 0 }  // 回転（X, Y, Z）＝Y軸に90度回転
    );

    // 17番目の障害物を「犬」の3番テクスチャ（dog_04.png）として配置。位置は(1200, -25, 100)、スケールは(1.2, 1.2, 1.1)、Y軸に165度回転。
    SetObstacle(
        17,             // 障害物配列のインデックス（17番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 犬の3番目のテクスチャ（dog_04.png）
        { 1200, -25, 100 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.2f, 1.2f, 1.1f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(165), 0 }  // 回転（X, Y, Z）＝Y軸に165度回転
    );

    // 18番目の障害物を「羊」の1番テクスチャ（sheep_02.png）として配置。位置は(-450, 70, -800)、スケールは(1.5, 1.5, 1.3)、Y軸に45度回転。
    SetObstacle(
        18,             // 障害物配列のインデックス（18番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 羊の1番目のテクスチャ（sheep_02.png）
        { -450, 70, -800 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.5f, 1.5f, 1.3f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(45), 0 }  // 回転（X, Y, Z）＝Y軸に45度回転
    );

    // 19番目の障害物を「鼠」の2番テクスチャ（mouse_03.png）として配置。位置は(950, 60, 600)、スケールは(1.1, 1.1, 1.0)、Y軸に315度回転。
    SetObstacle(
        19,             // 障害物配列のインデックス（19番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 鼠の2番目のテクスチャ（mouse_03.png）
        { 950, 60, 600 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.1f, 1.1f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(315), 0 }  // 回転（X, Y, Z）＝Y軸に315度回転
    );
    // 20番目の障害物を「犬」の0番テクスチャ（dog_01.png）として配置。位置は(-300, -20, 700)、スケールは(1.0, 1.0, 1.0)、Y軸に30度回転。
    SetObstacle(
        20,             // 障害物配列のインデックス（20番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 犬の0番目のテクスチャ（dog_01.png）
        { -300, -20, 700 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.0f, 1.0f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(30), 0 }  // 回転（X, Y, Z）＝Y軸に30度回転
    );

    // 21番目の障害物を「象」の0番テクスチャ（elephant_01.png）として配置。位置は(700, 15, -400)、スケールは(1.4, 1.4, 1.2)、Y軸に90度回転。
    SetObstacle(
        21,             // 障害物配列のインデックス（21番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 象の0番目のテクスチャ（elephant_01.png）
        { 700, 15, -400 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.4f, 1.4f, 1.2f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(90), 0 }  // 回転（X, Y, Z）＝Y軸に90度回転
    );

    // 22番目の障害物を「羊」の3番テクスチャ（sheep_04.png）として配置。位置は(-700, 25, 200)、スケールは(1.2, 1.2, 1.1)、Y軸に150度回転。
    SetObstacle(
        22,             // 障害物配列のインデックス（22番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 羊の3番目のテクスチャ（sheep_04.png）
        { -700, 25, 200 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.2f, 1.2f, 1.1f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(150), 0 }  // 回転（X, Y, Z）＝Y軸に150度回転
    );

    // 23番目の障害物を「猫」の1番テクスチャ（cat_02.png）として配置。位置は(1000, 40, -300)、スケールは(0.8, 0.8, 0.8)、回転なし。
    SetObstacle(
        23,             // 障害物配列のインデックス（23番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 猫の1番目のテクスチャ（cat_02.png）
        { 1000, 40, -300 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.8f, 0.8f, 0.8f }, // スケール（X, Y, Z）
        { 0, 0, 0 }     // 回転（X, Y, Z）＝回転なし
    );

    // 24番目の障害物を「鼠」の3番テクスチャ（mouse_04.png）として配置。位置は(-150, 35, -600)、スケールは(1.3, 1.3, 1.2)、Y軸に180度回転。
    SetObstacle(
        24,             // 障害物配列のインデックス（24番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 鼠の3番目のテクスチャ（mouse_04.png）
        { -150, 35, -600 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.3f, 1.3f, 1.2f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(180), 0 }  // 回転（X, Y, Z）＝Y軸に180度回転
    );

    // 25番目の障害物を「象」の4番テクスチャ（elephant_05.png）として配置。位置は(1350, 80, 150)、スケールは(1.7, 1.7, 1.5)、Y軸に270度回転。
    SetObstacle(
        25,             // 障害物配列のインデックス（25番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        4,              // 象の4番目のテクスチャ（elephant_05.png）
        { 1350, 35, 150 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.7f, 1.7f, 1.5f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(270), 0 }  // 回転（X, Y, Z）＝Y軸に270度回転
    );

    // 26番目の障害物を「犬」の2番テクスチャ（dog_03.png）として配置。位置は(-900, -30, -200)、スケールは(1.1, 1.1, 1.0)、Y軸に60度回転。
    SetObstacle(
        26,             // 障害物配列のインデックス（26番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 犬の2番目のテクスチャ（dog_03.png）
        { -900, -30, -200 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.1f, 1.1f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(60), 0 }  // 回転（X, Y, Z）＝Y軸に60度回転
    );

    // 27番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(400, -35, 800)、スケールは(1.5, 1.5, 1.3)、Y軸に225度回転。
    SetObstacle(
        27,             // 障害物配列のインデックス（27番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 羊の0番目のテクスチャ（sheep_01.png）
        { 620, 35, 800 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.5f, 1.5f, 1.3f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(225), 0 }  // 回転（X, Y, Z）＝Y軸に225度回転
    );

    // 28番目の障害物を「猫」の0番テクスチャ（cat_01.png）として配置。位置は(-1250, 45, 350)、スケールは(1.2, 1.2, 1.1)、Y軸に315度回転。
    SetObstacle(
        28,             // 障害物配列のインデックス（28番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 猫の0番目のテクスチャ（cat_01.png）
        { -1250, 45, 350 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.2f, 1.2f, 1.1f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(315), 0 }  // 回転（X, Y, Z）＝Y軸に315度回転
    );

    // 29番目の障害物を「鼠」の1番テクスチャ（mouse_02.png）として配置。位置は(850, 55, 450)、スケールは(1.6, 1.6, 1.4)、Y軸に120度回転。
    SetObstacle(
        29,             // 障害物配列のインデックス（29番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 鼠の1番目のテクスチャ（mouse_02.png）
        { 850, 55, 450 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.6f, 1.6f, 1.4f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(120), 0 }  // 回転（X, Y, Z）＝Y軸に120度回転
    );

    // 30番目の障害物を「象」の1番テクスチャ（elephant_02.png）として配置。位置は(-500, 65, 650)、スケールは(1.8, 1.8, 1.6)、回転なし。
    SetObstacle(
        30,             // 障害物配列のインデックス（30番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 象の1番目のテクスチャ（elephant_02.png）
        { -500, 65, 650 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.8f, 1.8f, 1.6f }, // スケール（X, Y, Z）
        { 0, 0, 0 }     // 回転（X, Y, Z）＝回転なし
    );

    // 31番目の障害物を「犬」の4番テクスチャ（dog_05.png）として配置。位置は(1150, -10, -500)、スケールは(0.9, 0.9, 0.9)、Y軸に45度回転。
    SetObstacle(
        31,             // 障害物配列のインデックス（31番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        4,              // 犬の4番目のテクスチャ（dog_05.png）
        { 1150, -10, -500 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(45), 0 }  // 回転（X, Y, Z）＝Y軸に45度回転
    );

    // 32番目の障害物を「羊」の2番テクスチャ（sheep_03.png）として配置。位置は(-800, 20, -750)、スケールは(1.3, 1.3, 1.2)、Y軸に135度回転。
    SetObstacle(
        32,             // 障害物配列のインデックス（32番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 羊の2番目のテクスチャ（sheep_03.png）
        { -800, 20, -750 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.3f, 1.3f, 1.2f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(135), 0 }  // 回転（X, Y, Z）＝Y軸に135度回転
    );

    // 33番目の障害物を「猫」の3番テクスチャ（cat_04.png）として配置。位置は(250, 30, 50)、スケールは(1.4, 1.4, 1.3)、Y軸に240度回転。
    SetObstacle(
        33,             // 障害物配列のインデックス（33番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 猫の3番目のテクスチャ（cat_04.png）
        { 250, 30, 50 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.4f, 1.4f, 1.3f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(240), 0 }  // 回転（X, Y, Z）＝Y軸に240度回転
    );

    // 34番目の障害物を「鼠」の4番テクスチャ（mouse_05.png）として配置。位置は(-1150, -5, -100)、スケールは(1.1, 1.1, 1.0)、Y軸に165度回転。
    SetObstacle(
        34,             // 障害物配列のインデックス（34番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        4,              // 鼠の4番目のテクスチャ（mouse_05.png）
        { -1150, -5, -100 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.1f, 1.1f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(165), 0 }  // 回転（X, Y, Z）＝Y軸に165度回転
    );

    // 35番目の障害物を「象」の6番テクスチャ（elephant_07.png）として配置。位置は(500, 75, 250)、スケールは(2.0, 2.0, 1.8)、Y軸に300度回転。
    SetObstacle(
        35,             // 障害物配列のインデックス（35番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        6,              // 象の6番目のテクスチャ（elephant_07.png）
        { 500, 25, 250 }, // ワールド空間での配置座標（X, Y, Z）
        { 2.0f, 2.0f, 1.8f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(300), 0 }  // 回転（X, Y, Z）＝Y軸に300度回転
    );

    // 36番目の障害物を「犬」の1番テクスチャ（dog_02.png）として配置。位置は(-400, -25, 500)、スケールは(1.2, 1.2, 1.1)、回転なし。
    SetObstacle(
        36,             // 障害物配列のインデックス（36番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 犬の1番目のテクスチャ（dog_02.png）
        { -400, -25, 500 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.2f, 1.2f, 1.1f }, // スケール（X, Y, Z）
        { 0, 0, 0 }     // 回転（X, Y, Z）＝回転なし
    );

    // 37番目の障害物を「羊」の1番テクスチャ（sheep_02.png）として配置。位置は(1250, 10, -650)、スケールは(0.7, 0.7, 0.7)、Y軸に75度回転。
    SetObstacle(
        37,             // 障害物配列のインデックス（37番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 羊の1番目のテクスチャ（sheep_02.png）
        { 1250, 10, -650 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.7f, 0.7f, 0.7f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(75), 0 }  // 回転（X, Y, Z）＝Y軸に75度回転
    );

    // 38番目の障害物を「猫」の2番テクスチャ（cat_03.png）として配置。位置は(-650, 85, 100)、スケールは(1.5, 1.5, 1.4)、Y軸に195度回転。
    SetObstacle(
        38,             // 障害物配列のインデックス（38番）
        1,              // 種類：1 = 猫（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 猫の2番目のテクスチャ（cat_03.png）
        { -650, 45, 100 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.5f, 1.5f, 1.4f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(195), 0 }  // 回転（X, Y, Z）＝Y軸に195度回転
    );

    // 39番目の障害物を「鼠」の0番テクスチャ（mouse_01.png）として配置。位置は(750, 5, -800)、スケールは(1.7, 1.7, 1.5)、Y軸に270度回転。
    SetObstacle(
        39,             // 障害物配列のインデックス（39番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 鼠の0番目のテクスチャ（mouse_01.png）
        { 250, 5, -800 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.7f, 1.7f, 1.5f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(270), 0 }  // 回転（X, Y, Z）＝Y軸に270度回転
    );

    // 40番目の障害物を「象」の3番テクスチャ（elephant_04.png）として配置。位置は(-350, 95, -450)、スケールは(1.6, 1.6, 1.3)、Y軸に105度回転。
    SetObstacle(
        40,             // 障害物配列のインデックス（40番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 象の3番目のテクスチャ（elephant_04.png）
        { -350, 15, -450 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.6f, 1.6f, 1.3f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(105), 0 }  // 回転（X, Y, Z）＝Y軸に105度回転
    );

    // 41番目の障害物を「犬」の3番テクスチャ（dog_04.png）として配置。位置は(1000, -40, 350)、スケールは(1.0, 1.0, 1.0)、Y軸に210度回転。
    SetObstacle(
        41,             // 障害物配列のインデックス（41番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 犬の3番目のテクスチャ（dog_04.png）
        { 1000, -40, 350 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.0f, 1.0f, 1.0f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(210), 0 }  // 回転（X, Y, Z）＝Y軸に210度回転
    );

    // 42番目の障害物を「羊」の3番テクスチャ（sheep_04.png）として配置。位置は(-1000, 15, 250)、スケールは(1.8, 1.8, 1.6)、回転なし。
    SetObstacle(
        42,             // 障害物配列のインデックス（42番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 羊の3番目のテクスチャ（sheep_04.png）
        { -1000, 15, 250 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.8f, 1.8f, 1.6f }, // スケール（X, Y, Z）
        { 0, 0, 0 }     // 回転（X, Y, Z）＝回転なし
    );

    // 44番目の障害物を「鼠」の2番テクスチャ（mouse_03.png）として配置。位置は(-750, 70, 550)、スケールは(1.3, 1.3, 1.2)、Y軸に255度回転。
    SetObstacle(
        44,             // 障害物配列のインデックス（44番）
        3,              // 種類：3 = 鼠（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 鼠の2番目のテクスチャ（mouse_03.png）
        { -350, 30, -950 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.3f, 1.3f, 1.2f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(255), 0 }  // 回転（X, Y, Z）＝Y軸に255度回転
    );

    // 45番目の障害物を「象」の5番テクスチャ（elephant_06.png）として配置。位置は(1350, 100, -100)、スケールは(1.9, 1.9, 1.7)、Y軸に15度回転。
    SetObstacle(
        45,             // 障害物配列のインデックス（45番）
        2,              // 種類：2 = 象（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        5,              // 象の5番目のテクスチャ（elephant_06.png）
        { 1350, 20, -100 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.9f, 1.9f, 1.7f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(15), 0 }  // 回転（X, Y, Z）＝Y軸に15度回転
    );

    // 46番目の障害物を「犬」の0番テクスチャ（dog_01.png）として配置。位置は(-250, 60, -350)、スケールは(1.4, 1.4, 1.3)、Y軸に120度回転。
    SetObstacle(
        46,             // 障害物配列のインデックス（46番）
        0,              // 種類：0 = 犬（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 犬の0番目のテクスチャ（dog_01.png）
        { -250, 60, -350 }, // ワールド空間での配置座標（X, Y, Z）
        { 1.4f, 1.4f, 1.3f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(120), 0 }  // 回転（X, Y, Z）＝Y軸に120度回転
    );

    // 47番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        47,             // 障害物配列のインデックス（47番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 羊の0番目のテクスチャ（sheep_01.png）
        { 900, 35, 600 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(285), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );

    // 48番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        48,             // 障害物配列のインデックス（47番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        0,              // 羊の0番目のテクスチャ（sheep_01.png）
        { -110, 35, -1200 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(135), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );

    // 49番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        49,             // 障害物配列のインデックス（47番）
        2,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 羊の0番目のテクスチャ（sheep_01.png）
        { -520, 35, -1100 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(150), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );


    // 50番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        50,             // 障害物配列のインデックス（47番）
        3,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        4,              // 羊の0番目のテクスチャ（sheep_01.png）
        { -220, 35, -1100 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(205), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );


    // 51番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        51,             // 障害物配列のインデックス（47番）
        0,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 羊の0番目のテクスチャ（sheep_01.png）
        { -20, 35, -1100 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(246), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );

    // 52番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        52,             // 障害物配列のインデックス（47番）
        3,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        1,              // 羊の0番目のテクスチャ（sheep_01.png）
        { 120, 35, -900 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(300), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );

    // 53番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        53,             // 障害物配列のインデックス（47番）
        1,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        3,              // 羊の0番目のテクスチャ（sheep_01.png）
        { 220, 35, -800 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(220), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );

    // 54番目の障害物を「羊」の0番テクスチャ（sheep_01.png）として配置。位置は(900, 35, 600)、スケールは(0.9, 0.9, 0.9)、Y軸に285度回転。
    SetObstacle(
        54,             // 障害物配列のインデックス（47番）
        4,              // 種類：4 = 羊（0=犬, 1=猫, 2=象, 3=鼠, 4=羊）
        2,              // 羊の0番目のテクスチャ（sheep_01.png）
        { 300, 35, -1200 }, // ワールド空間での配置座標（X, Y, Z）
        { 0.9f, 0.9f, 0.9f }, // スケール（X, Y, Z）
        { 0, XMConvertToRadians(271), 0 }  // 回転（X, Y, Z）＝Y軸に285度回転
    );

    //for (int i = 2; i < OBSTACLE_MAX; i++) {
    //    g_Obstacle[i].use = FALSE;
    //}

    return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void UninitObstacleFragment(void)
{
    if (g_VertexBuffer) {
        g_VertexBuffer->Release();
        g_VertexBuffer = NULL;
    }

    for (int t = 0; t < OBSTACLE_TYPES; t++) {
        for (int i = 0; i < TEXTURE_PER_TYPE; i++) {
            if (g_Texture[t][i]) {
                g_Texture[t][i]->Release();
                g_Texture[t][i] = NULL;
            }
        }
    }
}

//*****************************************************************************
// 更新処理（必要なし）
//*****************************************************************************
void UpdateObstacleFragment(void)
{
    // 描画専用なら何もせずOK
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void DrawObstacleFragment(void)
{
    UINT stride = sizeof(VERTEX_3D);
    UINT offset = 0;
    GetDeviceContext()->IASetVertexBuffers(0, 1, &g_VertexBuffer, &stride, &offset);
    GetDeviceContext()->IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP);

    SetCullingMode(CULL_MODE_NONE);
    SetAlphaTestEnable(BLEND_MODE_ALPHABLEND);
    SetLightEnable(FALSE);
    SetDepthEnable(TRUE);

    MATERIAL mat = {};
    mat.Diffuse = XMFLOAT4(1, 1, 1, 1);
    SetMaterial(mat);

    for (int i = 0; i < OBSTACLE_MAX; i++) {
        if (!g_Obstacle[i].use) continue;

        XMMATRIX mtxWorld = XMMatrixIdentity();
        XMMATRIX mtxScl = XMMatrixScaling(g_Obstacle[i].scl.x, g_Obstacle[i].scl.y, g_Obstacle[i].scl.z);
        XMMATRIX mtxRot = XMMatrixRotationRollPitchYaw(g_Obstacle[i].rot.x, g_Obstacle[i].rot.y, g_Obstacle[i].rot.z);
        XMMATRIX mtxTranslate = XMMatrixTranslation(g_Obstacle[i].pos.x, g_Obstacle[i].pos.y + 60.0f, g_Obstacle[i].pos.z + 200.0f);
        mtxWorld = mtxScl * mtxRot * mtxTranslate;

        SetWorldMatrix(&mtxWorld);
        XMStoreFloat4x4(&g_Obstacle[i].mtxWorld, mtxWorld);

        ID3D11ShaderResourceView* tex = g_Texture[g_Obstacle[i].type][g_Obstacle[i].texIndex];
        GetDeviceContext()->PSSetShaderResources(0, 1, &tex);

        GetDeviceContext()->Draw(4, 0);
    }

    SetLightEnable(TRUE);
}


